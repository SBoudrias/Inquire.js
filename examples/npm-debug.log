0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', '-g', 'install', 'inquirer' ]
2 info using npm@1.3.11
3 info using node@v0.10.21
4 verbose cache add [ 'inquirer', null ]
5 verbose cache add name=undefined spec="inquirer" args=["inquirer",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'inquirer',
6 verbose parsed url   path: 'inquirer',
6 verbose parsed url   href: 'inquirer' }
7 silly lockFile 73679e5a-inquirer inquirer
8 verbose lock inquirer /Users/danielchatfield/.npm/73679e5a-inquirer.lock
9 silly lockFile 73679e5a-inquirer inquirer
10 silly lockFile 73679e5a-inquirer inquirer
11 verbose addNamed [ 'inquirer', '' ]
12 verbose addNamed [ null, '*' ]
13 silly lockFile 4be038c5-inquirer inquirer@
14 verbose lock inquirer@ /Users/danielchatfield/.npm/4be038c5-inquirer.lock
15 silly addNameRange { name: 'inquirer', range: '*', hasData: false }
16 verbose url raw inquirer
17 verbose url resolving [ 'https://registry.npmjs.org/', './inquirer' ]
18 verbose url resolved https://registry.npmjs.org/inquirer
19 info trying registry request attempt 1 at 12:05:44
20 verbose etag "5PE1DOZUK22CQLZCG7Q4SUNI2"
21 http GET https://registry.npmjs.org/inquirer
22 http 200 https://registry.npmjs.org/inquirer
23 silly registry.get cb [ 200,
23 silly registry.get   { vary: 'Accept',
23 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
23 silly registry.get     etag: '"4C4TFPAXQ93S0ALLC23RU6W0H"',
23 silly registry.get     date: 'Thu, 19 Dec 2013 12:05:37 GMT',
23 silly registry.get     'content-type': 'application/json',
23 silly registry.get     'content-length': '199831' } ]
24 silly addNameRange number 2 { name: 'inquirer', range: '*', hasData: true }
25 silly addNameRange versions [ 'inquirer',
25 silly addNameRange   [ '0.1.0',
25 silly addNameRange     '0.1.1',
25 silly addNameRange     '0.1.2',
25 silly addNameRange     '0.1.3',
25 silly addNameRange     '0.1.4',
25 silly addNameRange     '0.1.5',
25 silly addNameRange     '0.1.6',
25 silly addNameRange     '0.1.7',
25 silly addNameRange     '0.1.8',
25 silly addNameRange     '0.1.9',
25 silly addNameRange     '0.2.0',
25 silly addNameRange     '0.2.1',
25 silly addNameRange     '0.1.11',
25 silly addNameRange     '0.1.12',
25 silly addNameRange     '0.2.2',
25 silly addNameRange     '0.2.3',
25 silly addNameRange     '0.2.4',
25 silly addNameRange     '0.2.5',
25 silly addNameRange     '0.3.0',
25 silly addNameRange     '0.3.1',
25 silly addNameRange     '0.3.2',
25 silly addNameRange     '0.3.3',
25 silly addNameRange     '0.3.4',
25 silly addNameRange     '0.3.5' ] ]
26 verbose addNamed [ 'inquirer', '0.3.5' ]
27 verbose addNamed [ '0.3.5', '0.3.5' ]
28 silly lockFile b504a941-inquirer-0-3-5 inquirer@0.3.5
29 verbose lock inquirer@0.3.5 /Users/danielchatfield/.npm/b504a941-inquirer-0-3-5.lock
30 silly lockFile b504a941-inquirer-0-3-5 inquirer@0.3.5
31 silly lockFile b504a941-inquirer-0-3-5 inquirer@0.3.5
32 silly lockFile 4be038c5-inquirer inquirer@
33 silly lockFile 4be038c5-inquirer inquirer@
34 silly resolved [ { name: 'inquirer',
34 silly resolved     version: '0.3.5',
34 silly resolved     description: 'A collection of common interactive command line user interfaces.',
34 silly resolved     main: 'lib/inquirer.js',
34 silly resolved     scripts: { test: 'grunt --verbose' },
34 silly resolved     repository:
34 silly resolved      { type: 'git',
34 silly resolved        url: 'git://github.com/SBoudrias/Inquirer.js.git' },
34 silly resolved     keywords: [ 'command', 'prompt', 'stdin', 'cli' ],
34 silly resolved     author: { name: 'Simon Boudrias', email: 'admin@simonboudrias.com' },
34 silly resolved     license: 'MIT',
34 silly resolved     dependencies:
34 silly resolved      { lodash: '~1.2.1',
34 silly resolved        async: '~0.2.8',
34 silly resolved        'cli-color': '~0.2.2',
34 silly resolved        'mute-stream': '0.0.3' },
34 silly resolved     devDependencies:
34 silly resolved      { grunt: '~0.4.1',
34 silly resolved        'grunt-cli': '~0.1.8',
34 silly resolved        'grunt-simple-mocha': '~0.4.0',
34 silly resolved        mocha: '~1.9.0',
34 silly resolved        chai: '~1.6.0',
34 silly resolved        'grunt-contrib-jshint': '~0.5.1',
34 silly resolved        sinon: '~1.7.2',
34 silly resolved        proxyquire: '~0.4.1',
34 silly resolved        'grunt-release': '~0.3.3' },
34 silly resolved     readme: 'Inquirer.js  [![Build Status](https://travis-ci.org/SBoudrias/Inquirer.js.png?branch=master)](http://travis-ci.org/SBoudrias/Inquirer.js)\n=====================\n\nA collection of common interactive command line user interfaces.\n\n\nGoal and philosophy\n---------------------\n\nWe strive at providing easily embeddable and beautiful command line interface for Node.js ;\nsome hope in becoming the CLI Xanadu.\n\n_Inquirer_ should ease the process of asking end user **questions**, **parsing**, **validating** answers, managing **hierarchical prompts** and providing **error feedback**.\n\n_Inquirer_ provide the user interface, and the inquiry session flow. If you\'re searching for a full blown command line program utility, then check out [Commander.js](https://github.com/visionmedia/commander.js) (inspired by) or [Cli-color](https://github.com/medikoo/cli-color) (used internally).\n\n\nDocumentation\n=====================\n\n\nInstallation\n---------------------\n\n``` prompt\nnpm install inquirer\n```\n\n```javascript\nvar inquirer = require("inquirer");\ninquirer.prompt([/* Pass your questions in here */], function( answers ) {\n\t// Use user feedback for... whatever!!\n});\n```\n\n\nExamples (Run it and see it)\n---------------------\n\nCheckout the `examples/` folder for code and interface examples.\n\n``` prompt\nnode examples/pizza.js\n# etc\n```\n\n\nMethods\n---------------------\n\n### `inquirer.prompt( questions, callback )`\n\nLaunch the prompt interface (inquiry session)\n\n+ **questions** (Array) containing [Question Object](#question)\n+ **callback** (Function) first parameter is the [Answers Object](#answers)\n\n\nObjects\n---------------------\n\n### Question\nA question object is a `hash` containing question related values:\n\n+ **type**: (String) Type of the prompt. Defaults: `input` - Possible values: `input`, `confirm`,\n`list`, `rawlist`\n+ **name**: (String) The name to use when storing the answer in the anwers hash.\n+ **message**: (String) The question to print.\n+ **default**: (String|Function) Default value to use if nothing is entered, or a function that returns the default value. If defined as a function, the first parameter will be the current inquirer session answers. \n+ **choices**: (Array|Function) Choices array or a function returning a choices array. If defined as a function, the first parameter will be the current inquirer session answers.  \nArray values can be simple `strings`, or `objects` containing a `name` (to display) and a `value` properties (to save in the answers hash). Values can also be [a `Separator`](#separator).\n+ **validate**: (Function) Receive the user input and should return `true` if the value is valid, and an error message (`String`) otherwise. If `false` is returned, a default error message is provided.\n+ **filter**: (Function) Receive the user input and return the filtered value to be used inside the program. The value returned will be added to the _Answers_ hash.\n+ **when**: (Function) Receive the current user answers hash and should return `true` or `false` depending on wheter or not this question should be asked.\n\n`validate`, `filter` and `when` functions can be asynchronously using `this.async()`. You just have to pass the value you\'d normally return to the callback option.\n\n``` javascript\n{\n  validate: function(input) {\n\n    // Declare function as asynchronous, and save the done callback\n    var done = this.async();\n\n    // Do async stuff\n    setTimeout(function() {\n      if (typeof input !== "number") {\n        // Pass the return value in the done callback\n        done("You need to provide a number");\n        return;\n      }\n      // Pass the return value in the done callback\n      done(true);\n    }, 3000);\n  }\n}\n```\n\n### Answers\nA key/value hash containing the client answers in each prompt.\n\n+ **Key** The `name` property of the _question_ object\n+ **Value** (Depends on the prompt)\n  + `confirm`: (Boolean)\n  + `input` : User input (filtered if `filter` is defined) (String)\n  + `rawlist`, `list` : Selected choice value (or name if no value specified) (String)\n\n### Separator\nA separator can be added to any `choices` array:\n\n```\n// In the question object\nchoices: [ "Choice A", new inquirer.Separator(), "choice B" ]\n\n// Which\'ll be displayed this way\n[?] What do you want to do?\n > Order a pizza\n   Make a reservation\n   --------\n   Ask opening hours\n   Talk to the receptionnist\n```\n\nThe constructor takes a facultative `String` value that\'ll be use as the separator. If omitted, the separator will be `--------`.\n\nPrompts type\n---------------------\n\n_allowed options written inside square brackets (`[]`) are optional. Others are required._\n\n### List - `{ type: "list" }`\n\nTake `type`, `name`, `message`, `choices`[, `default`, `filter`] properties. (Note that\ndefault must be the choice `index` in the array)\n\n![List prompt](https://dl.dropboxusercontent.com/u/59696254/inquirer/list-prompt.png)\n\n### Raw List - `{ type: "rawlist" }`\n\nTake `type`, `name`, `message`, `choices`[, `default`, `filter`] properties. (Note that\ndefault must the choice `index` in the array)\n\n![Raw list prompt](https://dl.dropboxusercontent.com/u/59696254/inquirer/rawlist-prompt.png)\n\n### Expand - `{ type: "expand" }`\n\nTake `type`, `name`, `message`, `choices`[, `default`, `filter`] properties. (Note that\ndefault must be the choice `index` in the array)\n\nNote that the `choice` object will take an extra parameter called `key` for the `expand` prompt. This parameter must be a single (lowercased) character. The `h` option is added by the prompt and shouldn\'t be defined by the user.\n\nSee `examples/expand.js` for a running example.\n\n![Expand prompt closed](https://dl.dropboxusercontent.com/u/59696254/inquirer/expand-prompt-1.png)\n![Expand prompt expanded](https://dl.dropboxusercontent.com/u/59696254/inquirer/expand-prompt-2.png)\n\n\n### Checkbox - `{ type: "checkbox" }`\n\nTake `type`, `name`, `message`, `choices`[, `filter`, `validate`] properties.\n\nChoices marked as `{ checked: true }` will be checked by default.\n\n![Checkbox prompt](https://dl.dropboxusercontent.com/u/59696254/inquirer/checkbox-prompt.png)\n\n### Confirm - `{ type: "confirm" }`\n\nTake `type`, `name`, `message`[, `default`] properties. `default` is expected to be a boolean if used.\n\n![Confirm prompt](https://dl.dropboxusercontent.com/u/59696254/inquirer/confirm-prompt.png)\n\n### Input - `{ type: "input" }`\n\nTake `type`, `name`, `message`[, `default`, `filter`, `validate`] properties.\n\n![Input prompt](https://dl.dropboxusercontent.com/u/59696254/inquirer/input-prompt.png)\n\n### Password - `{ type: "password" }`\n\nTake `type`, `name`, `message`[, `default`, `filter`, `validate`] properties.\n\n![Password prompt](https://dl.dropboxusercontent.com/u/59696254/inquirer/password-prompt.png)\n\n\n\nSupport (OS - terminals)\n=====================\n\nYou should expect mostly good support for the CLI below. This does not mean we won\'t\nlook at issues found on other command line - feel free to report any!\n\n- **Mac OS**:\n  - Terminal.app\n  - iTerm\n- **Windows**:\n  - cmd.exe\n  - Powershell\n  - Cygwin\n- **Ubuntu**:\n  - Terminal\n\n\nNews on the march (Release notes)\n=====================\n\nPlease refer to the [Github releases section for the changelog](https://github.com/SBoudrias/Inquirer.js/releases)\n\n\nContributing\n=====================\n\n**Style Guide**: Please base yourself on [Idiomatic.js](https://github.com/rwldrn/idiomatic.js) style guide with two space indent  \n**Unit test**: Unit test are wrote in Mocha. Please add a unit test for every new feature\nor bug fix. `npm test` to run the test suite.  \n**Documentation**: Add documentation for every API change. Feel free to send corrections\nor better docs!  \n**Pull Requests**: Send _fixes_ PR on the `master` branch. Any new features should be send on the `wip`branch.\n\nWe\'re looking to offer good support for multiple prompts and environments. If you want to\nhelp, we\'d like to keep a list of testers for each terminal/OS so we can contact you and\nget feedback before release. Let us know if you want to be added to the list (just tweet\nto @vaxilart) or just add your name to [the wiki](https://github.com/SBoudrias/Inquirer.js/wiki/Testers)\n\nLicense\n=====================\n\nCopyright (c) 2012 Simon Boudrias (twitter: @vaxilart)  \nLicensed under the MIT license.\n',
34 silly resolved     readmeFilename: 'README.md',
34 silly resolved     bugs: { url: 'https://github.com/SBoudrias/Inquirer.js/issues' },
34 silly resolved     _id: 'inquirer@0.3.5',
34 silly resolved     _from: 'inquirer@' } ]
35 info install inquirer@0.3.5 into /usr/local/lib
36 info installOne inquirer@0.3.5
37 info /usr/local/lib/node_modules/inquirer unbuild
38 verbose tar unpack /Users/danielchatfield/.npm/inquirer/0.3.5/package.tgz
39 silly lockFile 42259c5e--local-lib-node-modules-inquirer tar:///usr/local/lib/node_modules/inquirer
40 verbose lock tar:///usr/local/lib/node_modules/inquirer /Users/danielchatfield/.npm/42259c5e--local-lib-node-modules-inquirer.lock
41 silly lockFile e969b715-d-npm-inquirer-0-3-5-package-tgz tar:///Users/danielchatfield/.npm/inquirer/0.3.5/package.tgz
42 verbose lock tar:///Users/danielchatfield/.npm/inquirer/0.3.5/package.tgz /Users/danielchatfield/.npm/e969b715-d-npm-inquirer-0-3-5-package-tgz.lock
43 silly gunzTarPerm modes [ '755', '644' ]
44 error Error: EACCES, mkdir '/usr/local/lib/node_modules/inquirer'
44 error  { [Error: EACCES, mkdir '/usr/local/lib/node_modules/inquirer']
44 error   errno: 3,
44 error   code: 'EACCES',
44 error   path: '/usr/local/lib/node_modules/inquirer',
44 error   fstream_type: 'Directory',
44 error   fstream_path: '/usr/local/lib/node_modules/inquirer',
44 error   fstream_class: 'DirWriter',
44 error   fstream_stack:
44 error    [ '/usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23',
44 error      '/usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53',
44 error      'Object.oncomplete (fs.js:107:15)' ] }
45 error Please try running this command again as root/Administrator.
46 error System Darwin 13.0.1
47 error command "node" "/usr/local/bin/npm" "-g" "install" "inquirer"
48 error cwd /Users/danielchatfield/Documents/Projects/Inquirer.js/examples
49 error node -v v0.10.21
50 error npm -v 1.3.11
51 error path /usr/local/lib/node_modules/inquirer
52 error fstream_path /usr/local/lib/node_modules/inquirer
53 error fstream_type Directory
54 error fstream_class DirWriter
55 error code EACCES
56 error errno 3
57 error stack Error: EACCES, mkdir '/usr/local/lib/node_modules/inquirer'
58 error fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23
58 error fstream_stack /usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53
58 error fstream_stack Object.oncomplete (fs.js:107:15)
59 verbose exit [ 3, true ]
